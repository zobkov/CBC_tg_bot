#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–∞–∑–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∏–Ω—Ç–µ—Ä–≤—å—é
"""

import asyncio
import csv
import sys
import os
from pathlib import Path
from typing import Dict, List

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
root_dir = Path(__file__).parent.parent
sys.path.insert(0, str(root_dir))

from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config.config import load_config


# –ú–∞–ø–ø–∏–Ω–≥ –æ—Ç–¥–µ–ª–æ–≤
DEPARTMENTS = {
    1: "–í—ã—Å—Ç–∞–≤–æ—á–Ω—ã–π –æ—Ç–¥–µ–ª",
    2: "–û—Ç–¥–µ–ª –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤", 
    3: "–û—Ç–¥–µ–ª SMM&PR",
    4: "–û—Ç–¥–µ–ª –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –∏ –ò–¢",
    5: "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª",
    6: "–û—Ç–¥–µ–ª –¥–∏–∑–∞–π–Ω–∞",
    7: "–û—Ç–¥–µ–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã"
}

# –°—Å—ã–ª–∫–∏ –Ω–∞ —á–∞—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–¥–µ–ª–∞ (–∏–∑ broadcast_texts.py)
DEPARTMENT_CHATS = {
    1: "https://t.me/+4hq650-lHiU0ZDAy",
    2: "https://t.me/+3MNzPMHDgAc0ZDY6", 
    3: "https://t.me/+wJb-z446vNc2Mjli",
    4: "https://t.me/+Ey5o6Jph99pmMGRi",
    5: "https://t.me/+Cvn-ILkZedoyOGMy",
    6: "https://t.me/+9jXEiamQUP42ZGJi",
    7: "https://t.me/+GqvuJ_HtlZMxOWQy"
}


def create_acceptance_message(department: int, subdepartment: str, position: str) -> str:
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏"""
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–æ–ª—å
    dept_name = DEPARTMENTS.get(department, f"–û—Ç–¥–µ–ª {department}")
    role_parts = [dept_name]
    
    if subdepartment and subdepartment.strip():
        role_parts.append(subdepartment.strip())
    
    if position and position.strip():
        role_parts.append(position.strip())
    
    role = " ‚Äì ".join(role_parts)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç
    chat_link = DEPARTMENT_CHATS.get(department, "https://t.me/+4hq650-lHiU0ZDAy")  # fallback
    
    return f"""–†–æ–ª—å: {role}

‰Ω†Â•Ω!
–û—Ç–±–æ—Ä –±—ã–ª —Å–µ—Ä—å—ë–∑–Ω—ã–º –∏—Å–ø—ã—Ç–∞–Ω–∏–µ–º. –ú—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏–ª–∏ —Å–æ—Ç–Ω–∏ —Ä–µ—à–µ–Ω–∏–π, –∏ —Ç–≤–æ—ë –æ–∫–∞–∑–∞–ª–æ—Å—å –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö —Å–∏–ª—å–Ω—ã—Ö. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É –ö–ë–ö!

–≠—Ç–æ —Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ –≤—Å–µ —Ç–≤–æ–∏ –∏–¥–µ–∏ –Ω–∞—Ö–æ–¥—è—Ç –∂–∏–≤–æ–π –æ—Ç–∫–ª–∏–∫, –∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å–æ–≥—Ä–µ–≤–∞—é—Ç —Å–≤–æ–∏–º —Ç–µ–ø–ª–æ–º. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —á–∞—Ç—É –∫–æ–º–∞–Ω–¥—ã ‚Äî —Ç–∞–º —É–∂–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –∏–¥–µ–π –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ñ–æ—Ä—É–º—É.

üîó {chat_link}

–û–±—â–∞–π—Å—è —Å –±—É–¥—É—â–∏–º–∏ "–¥—Ä—É–ª–µ–≥–∞–º–∏" –∏ –∑–∞—Ä—è–∂–∞–π—Å—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º :)

–î–∞-–¥–∞, –ö–ë–ö –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!"""


def create_acceptance_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–¥–æ–±—Ä–µ–Ω–∏—è"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            callback_data="start_staff_menu"
        )]
    ])


def create_decline_message() -> str:
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ"""
    return """Â§ßÂÆ∂Â•Ω!
–ú—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏–ª–∏ —Å–æ—Ç–Ω–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π. –ö–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –±—ã–ª–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–æ–π, –∏ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ —Ç–≤–æ—ë —Ä–µ—à–µ–Ω–∏–µ –Ω–µ –≤–æ—à–ª–æ –≤ —Å–ø–∏—Å–æ–∫ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–æ–≤. –≠—Ç–æ –Ω–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ ‚Äî —ç—Ç–æ —á–∞—Å—Ç—å –ø—É—Ç–∏. –ö–∞–∂–¥—ã–π –æ—Ç–±–æ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫—É–¥–∞ —Ä–∞—Å—Ç–∏ –¥–∞–ª—å—à–µ, –∏ –¥–∞—ë—Ç —à–∞–Ω—Å —É–≤–∏–¥–µ—Ç—å —Å–µ–±—è —Å –Ω–æ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã!

–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å: —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—Ç–º–µ—Ç–∏–ª–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã —Ç–≤–æ–µ–≥–æ —Ä–µ—à–µ–Ω–∏—è –∏ –ø–æ–¥—Å–∫–∞–∑–∞–ª–∏, —á—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å. –ó–∞–ø—Ä–æ—Å–∏—Ç—å –µ—ë –º–æ–∂–Ω–æ –ø—Ä—è–º–æ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ ‚Äî –æ–Ω–∞ –ø–æ–º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ.

–ú—ã –∏—Å–∫—Ä–µ–Ω–Ω–µ –≤–µ—Ä–∏–º, —á—Ç–æ –≤–ø–µ—Ä–µ–¥–∏ –±—É–¥–µ—Ç –µ—â—ë –º–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–æ–≤, –≥–¥–µ —Ç–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –ø—Ä–æ—è–≤–∏—Ç—Å—è –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ.
–ö–ë–ö ‚Äî —ç—Ç–æ –Ω–µ —Ä–∞–∑–æ–≤—ã–π —à–∞–Ω—Å, –∞ –±–æ–ª—å—à–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ. –ò –º—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞!"""


def create_decline_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–∫–∞–∑–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üè† –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç",
            callback_data="start_guest_menu"
        )]
    ])


async def parse_csv_and_prepare_messages(csv_file_path: str) -> Dict[str, List[Dict]]:
    """–ü–∞—Ä—Å–∏—Ç CSV –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    
    messages_to_send = {
        "acceptance": [],
        "decline": []
    }
    
    try:
        with open(csv_file_path, 'r', encoding='utf-8') as file:
            reader = csv.DictReader(file)
            
            for row in reader:
                user_id = row.get('ID', '').strip()
                username = row.get('Username', '').strip()
                full_name = row.get('–§–ò–û', '').strip()
                department = row.get('–û—Ç–¥–µ–ª', '').strip()
                subdepartment = row.get('–ü–æ–¥–æ—Ç–¥–µ–ª', '').strip()
                position = row.get('–í–∞–∫–∞–Ω—Å–∏—è', '').strip()
                evaluation = row.get('–û—Ü–µ–Ω–∫–∞', '').strip()
                
                if not user_id:
                    continue
                
                try:
                    user_id_int = int(user_id)
                except ValueError:
                    print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}")
                    continue
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –æ—Ü–µ–Ω–∫–µ
                if evaluation.lower() in ['–¥–∞', 'yes', '1', 'true']:
                    # –û–¥–æ–±—Ä–µ–Ω–∏–µ
                    try:
                        dept_num = int(department) if department else 1
                        message_text = create_acceptance_message(dept_num, subdepartment, position)
                        
                        messages_to_send["acceptance"].append({
                            'user_id': user_id_int,
                            'username': username,
                            'full_name': full_name,
                            'department': dept_num,
                            'subdepartment': subdepartment,
                            'position': position,
                            'message': message_text
                        })
                    except ValueError:
                        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –æ—Ç–¥–µ–ª–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {department}")
                        continue
                        
                elif evaluation.lower() in ['–Ω–µ—Ç', 'no', '0', 'false']:
                    # –û—Ç–∫–∞–∑
                    message_text = create_decline_message()
                    
                    messages_to_send["decline"].append({
                        'user_id': user_id_int,
                        'username': username,
                        'full_name': full_name,
                        'message': message_text
                    })
                
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –ø—É—Å—Ç–æ–π –æ—Ü–µ–Ω–∫–æ–π
    
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {csv_file_path}")
        return messages_to_send
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ CSV —Ñ–∞–π–ª–∞: {e}")
        return messages_to_send
    
    return messages_to_send


async def send_broadcast_messages(csv_file_path: str, dry_run: bool = True):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    
    config = load_config()
    
    # –ü–∞—Ä—Å–∏–º CSV –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    messages = await parse_csv_and_prepare_messages(csv_file_path)
    
    total_acceptance = len(messages["acceptance"])
    total_decline = len(messages["decline"])
    total_messages = total_acceptance + total_decline
    
    if total_messages == 0:
        print("üìÑ –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
        return
    
    print(f"üìä –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:")
    print(f"   ‚úÖ –û–¥–æ–±—Ä–µ–Ω–∏–µ: {total_acceptance}")
    print(f"   ‚ùå –û—Ç–∫–∞–∑: {total_decline}")
    print(f"   üìß –í—Å–µ–≥–æ: {total_messages}")
    print("=" * 80)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    if messages["acceptance"]:
        print("üìù –ü–†–ò–ú–ï–† –°–û–û–ë–©–ï–ù–ò–Ø –û–î–û–ë–†–ï–ù–ò–Ø:")
        print("-" * 50)
        example = messages["acceptance"][0]
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {example['full_name']} (@{example['username']}, ID: {example['user_id']})")
        print(f"üìç –†–æ–ª—å: {DEPARTMENTS.get(example['department'], '')} ‚Äì {example['subdepartment']} ‚Äì {example['position']}")
        print("-" * 50)
        print(example['message'][:200] + "..." if len(example['message']) > 200 else example['message'])
        print("=" * 80)
    
    if messages["decline"]:
        print("üìù –ü–†–ò–ú–ï–† –°–û–û–ë–©–ï–ù–ò–Ø –û–¢–ö–ê–ó–ê:")
        print("-" * 50)
        example = messages["decline"][0]
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {example['full_name']} (@{example['username']}, ID: {example['user_id']})")
        print("-" * 50)
        print(example['message'][:200] + "..." if len(example['message']) > 200 else example['message'])
        print("=" * 80)
    
    if dry_run:
        print("\nüîç DRY RUN: –°–æ–æ–±—â–µ–Ω–∏—è –ù–ï –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
        print("–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º --send")
        return
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    print(f"\n‚ùì –û—Ç–ø—Ä–∞–≤–∏—Ç—å {total_messages} —Å–æ–æ–±—â–µ–Ω–∏–π? (y/N): ", end="")
    confirm = input().strip().lower()
    
    if confirm != 'y':
        print("‚ùå –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
    bot = Bot(token=config.tg_bot.token)
    
    sent_count = 0
    error_count = 0
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ–¥–æ–±—Ä–µ–Ω–∏—è
        for msg_data in messages["acceptance"]:
            try:
                await bot.send_message(
                    chat_id=msg_data['user_id'], 
                    text=msg_data['message'],
                    reply_markup=create_acceptance_keyboard(),
                    parse_mode=None  # –û—Ç–∫–ª—é—á–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Ä–∞–∑–º–µ—Ç–∫–∏ –∏–∑-–∑–∞ –∫–∏—Ç–∞–π—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
                )
                sent_count += 1
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∏–µ: {msg_data['full_name']} (@{msg_data['username']})")
                
                # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                await asyncio.sleep(0.5)
                
            except Exception as e:
                error_count += 1
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {msg_data['user_id']}: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–∫–∞–∑–∞
        for msg_data in messages["decline"]:
            try:
                await bot.send_message(
                    chat_id=msg_data['user_id'], 
                    text=msg_data['message'],
                    reply_markup=create_decline_keyboard(),
                    parse_mode=None  # –û—Ç–∫–ª—é—á–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Ä–∞–∑–º–µ—Ç–∫–∏ –∏–∑-–∑–∞ –∫–∏—Ç–∞–π—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
                )
                sent_count += 1
                print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–∫–∞–∑: {msg_data['full_name']} (@{msg_data['username']})")
                
                # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                await asyncio.sleep(0.5)
                
            except Exception as e:
                error_count += 1
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {msg_data['user_id']}: {e}")
    
    finally:
        await bot.session.close()
    
    print("=" * 80)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–ê–°–°–´–õ–ö–ò:")
    print(f"   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {sent_count}")
    print(f"   ‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"   üìß –í—Å–µ–≥–æ: {total_messages}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    if len(sys.argv) < 2:
        print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python send_interview_results.py <–ø—É—Ç—å_–∫_csv_—Ñ–∞–π–ª—É> [--send]")
        print("   --send: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é dry-run)")
        sys.exit(1)
    
    csv_file_path = sys.argv[1]
    dry_run = "--send" not in sys.argv
    
    if not os.path.exists(csv_file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {csv_file_path}")
        sys.exit(1)
    
    print("üìß –†–∞—Å—Å—ã–ª–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–Ω—Ç–µ—Ä–≤—å—é")
    print(f"üìÅ –§–∞–π–ª: {csv_file_path}")
    print(f"üì§ –†–µ–∂–∏–º: {'DRY RUN' if dry_run else '–û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô'}")
    print("=" * 80)
    
    asyncio.run(send_broadcast_messages(csv_file_path, dry_run))


if __name__ == "__main__":
    main()