from aiogram_dialog import DialogManager
from config.config import load_config


async def get_departments_list(dialog_manager: DialogManager, **kwargs):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞"""
    config = load_config()
    departments = []
    
    for dept_key, dept_data in config.selection.departments.items():
        departments.append((dept_key, dept_data["name"]))
    
    return {
        "departments": departments,
    }


def _is_vacancy_already_selected(dialog_data, dept_key, pos_index, exclude_priority=None):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ —É–∂–µ –¥–∞–Ω–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è"""
    current_vacancy = (dept_key, pos_index)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
    for i in range(1, 4):
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
        if exclude_priority and i == exclude_priority:
            continue
            
        dept = dialog_data.get(f"priority_{i}_department")
        pos = dialog_data.get(f"priority_{i}_position")
        
        if dept and pos is not None:
            if (dept, str(pos)) == current_vacancy:
                return True
    
    return False


async def get_positions_for_department(dialog_manager: DialogManager, **kwargs):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞"""
    config = load_config()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    selected_dept = dialog_manager.dialog_data.get("selected_department")
    if not selected_dept:
        return {"positions": [], "selected_department": ""}
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞
    dept_data = config.selection.departments.get(selected_dept, {})
    positions = []
    
    # –ü–æ–∑–∏—Ü–∏–∏ —Ç–µ–ø–µ—Ä—å —Ö—Ä–∞–Ω—è—Ç—Å—è –∫–∞–∫ –º–∞—Å—Å–∏–≤, –∞ –Ω–µ –æ–±—ä–µ–∫—Ç
    positions_list = dept_data.get("positions", [])
    dialog_data = dialog_manager.dialog_data
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –º—ã —Å–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ–º, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –µ–≥–æ –∏–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏
    current_state = dialog_manager.current_context().state.state
    exclude_priority = None
    if current_state == "JobSelectionSG:select_position":
        exclude_priority = 1
    elif current_state == "JobSelectionSG:select_position_2":
        exclude_priority = 2
    elif current_state == "JobSelectionSG:select_position_3":
        exclude_priority = 3
    
    for i, pos_name in enumerate(positions_list):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ —É–∂–µ —ç—Ç–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —ç—Ç–æ–º –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ
        if not _is_vacancy_already_selected(dialog_data, selected_dept, str(i), exclude_priority):
            positions.append((str(i), pos_name))  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–¥–µ–∫—Å –∫–∞–∫ ID
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞
    dept_name = dept_data.get("name", selected_dept)
    
    return {
        "positions": positions,
        "selected_department": dept_name,
    }


async def get_priorities_overview(dialog_manager: DialogManager, **kwargs):
    """–ü–æ–ª—É—á–∏—Ç—å –æ–±–∑–æ—Ä –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤"""
    data = dialog_manager.dialog_data
    config = load_config()
    
    priorities_text = ""
    priorities_count = 0
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏
    for i in range(1, 4):
        dept_key = data.get(f"priority_{i}_department")
        pos_index = data.get(f"priority_{i}_position")
        
        if dept_key and pos_index is not None:
            priorities_count += 1
            dept_name = config.selection.departments.get(dept_key, {}).get("name", dept_key)
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏–∑ –º–∞—Å—Å–∏–≤–∞
            positions_list = config.selection.departments.get(dept_key, {}).get("positions", [])
            try:
                pos_name = positions_list[int(pos_index)]
            except (IndexError, ValueError):
                pos_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è"
                
            priorities_text += f"ü•á <b>{i}-–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</b> {dept_name} - {pos_name}\n"
        else:
            priorities_text += f"‚ö™ <b>{i}-–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</b> <i>–Ω–µ –≤—ã–±—Ä–∞–Ω</i>\n"
    
    # –î–æ–±–∞–≤–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –¥–µ–±–∞–≥–∞
    print(f"DEBUG: priorities_count = {priorities_count}")
    print(f"DEBUG: dialog_data = {data}")
    
    return {
        "priorities_text": priorities_text,
        "priorities_count": priorities_count,
        "can_add_2": priorities_count >= 1 and not data.get("priority_2_department"),
        "can_add_3": priorities_count >= 2 and not data.get("priority_3_department"),
    }


async def get_edit_departments_list(dialog_manager: DialogManager, **kwargs):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ –∂–µ —á—Ç–æ –∏ –æ–±—ã—á–Ω—ã–π —Å–ø–∏—Å–æ–∫)"""
    return await get_departments_list(dialog_manager, **kwargs)


async def get_edit_positions_for_department(dialog_manager: DialogManager, **kwargs):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞"""
    config = load_config()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    selected_dept = dialog_manager.dialog_data.get("edit_selected_department")
    if not selected_dept:
        return {"positions": [], "selected_department": ""}
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞
    dept_data = config.selection.departments.get(selected_dept, {})
    positions = []
    
    # –ü–æ–∑–∏—Ü–∏–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –∫–∞–∫ –º–∞—Å—Å–∏–≤
    positions_list = dept_data.get("positions", [])
    dialog_data = dialog_manager.dialog_data
    editing_priority = dialog_data.get("editing_priority", 1)
    
    for i, pos_name in enumerate(positions_list):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ —É–∂–µ —ç—Ç–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —ç—Ç–æ–º –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ
        # (–∏—Å–∫–ª—é—á–∞—è —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
        if not _is_vacancy_already_selected(dialog_data, selected_dept, str(i), exclude_priority=editing_priority):
            positions.append((str(i), pos_name))  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–¥–µ–∫—Å –∫–∞–∫ ID
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞
    dept_name = dept_data.get("name", selected_dept)
    
    return {
        "positions": positions,
        "selected_department": dept_name,
    }
