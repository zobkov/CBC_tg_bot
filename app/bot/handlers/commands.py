from aiogram import Router, Bot
from aiogram.types import Message
from aiogram.filters import Command, CommandStart, StateFilter
import logging

from aiogram_dialog import DialogManager, StartMode

from app.bot.states.start import StartSG
from app.bot.states.main_menu import MainMenuSG
from app.bot.states.first_stage import FirstStageSG
from app.bot.states.job_selection import JobSelectionSG

from app.bot.assets.media_groups.media_groups import build_start_media_group
from app.services.google_sync_service import setup_google_sync_service

router = Router()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def process_command_start(message: Message, dialog_manager: DialogManager):
    media_group = build_start_media_group()
    await message.bot.send_media_group(chat_id=message.chat.id, media=media_group)
    await dialog_manager.start(state=StartSG.start, mode=StartMode.RESET_STACK)

@router.message(Command(commands=['menu']))
async def process_command_menu(message: Message, dialog_manager: DialogManager):
    await dialog_manager.start(state=MainMenuSG.main_menu, mode=StartMode.RESET_STACK)

@router.message(Command(commands=['test']))
async def process_command_test(message: Message, dialog_manager: DialogManager):
    await dialog_manager.start(state=JobSelectionSG.select_department, mode=StartMode.RESET_STACK)

@router.message(Command(commands=['sync_to_google']))
async def process_sync_to_google_command(message: Message, **middleware_data):
    """–•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /sync_to_google –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ —Å Google Sheets"""
    ADMIN_IDS = [257026813, 1905792261]
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ middleware_data –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–Ω–æ–≤–æ
    config = middleware_data.get("config")
    if not config:
        from config.config import load_config
        config = load_config()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    if  message.from_user.id not in ADMIN_IDS:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        status_msg = await message.answer("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ —Å Google Sheets...")
        
        if not config.google:
            await status_msg.edit_text("‚ùå Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ middleware_data
        dispatcher = middleware_data.get("_dispatcher") or middleware_data.get("dispatcher")
        db_pool = None
        
        if dispatcher:
            db_pool = dispatcher.get("db_applications")
        
        if not db_pool:
            await status_msg.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
            return
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        sync_service = await setup_google_sync_service(
            config.google.credentials_path,
            config.google.spreadsheet_id
        )
        
        if not sync_service:
            await status_msg.edit_text("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
            return
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        await status_msg.edit_text("üìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫...")
        
        sync_stats = await sync_service.sync_approved_applications(db_pool)
        
        if not sync_stats:
            await status_msg.edit_text("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        report_lines = ["‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n"]
        report_lines.append("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ –æ—Ç–¥–µ–ª–∞–º:")
        
        total_changes = 0
        for sheet_name, count in sync_stats.items():
            if count > 0:
                report_lines.append(f"‚Ä¢ {sheet_name}: {count} –∏–∑–º–µ–Ω–µ–Ω–∏–π")
            else:
                report_lines.append(f"‚Ä¢ {sheet_name}: –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
            total_changes += count
        
        if total_changes > 0:
            report_lines.append(f"\nüìà –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {total_changes}")
        else:
            report_lines.append(f"\nüìà –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã, –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        
        report_lines.append(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: https://docs.google.com/spreadsheets/d/{config.google.spreadsheet_id}")
        
        await status_msg.edit_text("\n".join(report_lines))
        
        logger.info(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {message.from_user.id} (@{message.from_user.username})")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã sync_to_google: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {str(e)}")