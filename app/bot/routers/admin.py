"""
–†–æ—É—Ç–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
"""
import logging
import re
from aiogram import Router
from aiogram.filters import Command, CommandObject
from aiogram.types import Message

from app.bot.filters.rbac import HasRole
from app.bot.filters.legacy_intents import create_rbac_filter_with_legacy_exclusion
from app.enums.roles import Role

logger = logging.getLogger(__name__)

router = Router(name="admin")

# –§–∏–ª—å—Ç—Ä —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ —Å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º legacy –∏–Ω—Ç–µ–Ω—Ç–æ–≤
admin_filter = create_rbac_filter_with_legacy_exclusion(Role.ADMIN)
router.message.filter(admin_filter)
router.callback_query.filter(admin_filter)


@router.message(Command("admin_panel"))
async def admin_panel_command(message: Message):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å"""
    await message.answer(
        "üîß <b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ö–ë–ö</b>\n\n"
        "üîë <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏:</b>\n"
        "‚Ä¢ /grant <role> - –í—ã–¥–∞—Ç—å —Ä–æ–ª—å (–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)\n"
        "‚Ä¢ /revoke <role> - –û—Ç–æ–∑–≤–∞—Ç—å —Ä–æ–ª—å\n"
        "‚Ä¢ /grant <role> <user_id> - –í—ã–¥–∞—Ç—å —Ä–æ–ª—å –ø–æ ID\n"
        "‚Ä¢ /revoke <role> <user_id> - –û—Ç–æ–∑–≤–∞—Ç—å —Ä–æ–ª—å –ø–æ ID\n\n"
        "üìä <b>–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
        "‚Ä¢ /system_stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n"
        "‚Ä¢ /active_users - –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n"
        "‚Ä¢ /error_log - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏\n\n"
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n"
        "‚Ä¢ /maintenance - –†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è\n"
        "‚Ä¢ /cache_clear - –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à\n"
        "‚Ä¢ /backup - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: admin, staff, volunteer, guest, banned"
    )


@router.message(Command(re.compile(r"grant"), commands="grant"))
async def grant_role_command(message: Message, command: Command, db=None, redis=None):
    """–ö–æ–º–∞–Ω–¥–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–µ–π"""
    if not db:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    if not command.args:
        await message.answer(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "–ü—Ä–∏–º–µ—Ä: /grant staff 123456789 –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        )
        return
    
    args_parts = command.args.strip().split()
    if len(args_parts) < 1:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã")
        return
    
    role = args_parts[0]
    target_id = args_parts[1] if len(args_parts) > 1 else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ä–æ–ª–∏
    if not Role.is_valid_role(role):
        await message.answer(
            f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å: {role}\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: {', '.join(Role.get_all_roles())}"
        )
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not target_id:
        if message.reply_to_message and message.reply_to_message.from_user:
            target_id = str(message.reply_to_message.from_user.id)
        else:
            await message.answer(
                "‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                "–ü—Ä–∏–º–µ—Ä: /grant staff 123456789"
            )
            return
    
    try:
        target_user_id = int(target_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        target_user = await db.users.get_user_record(user_id=target_user_id)
        if not target_user:
            await message.answer(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è —Ä–æ–ª—å
        if await db.users.user_has_role(user_id=target_user_id, role=role):
            await message.answer(f"‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id} —É–∂–µ –µ—Å—Ç—å —Ä–æ–ª—å '{role}'")
            return
        
        # –í—ã–¥–∞—ë–º —Ä–æ–ª—å
        await db.users.add_user_role(
            user_id=target_user_id, 
            role=role, 
            granted_by=message.from_user.id
        )
        
        # –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if redis:
            await redis.delete(f"rbac:{target_user_id}")
        
        await message.answer(
            f"‚úÖ –†–æ–ª—å '{role}' —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}"
        )
        
        logger.info(
            f"Role granted: {role} to user {target_user_id} by admin {message.from_user.id}"
        )
        
    except ValueError:
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except Exception as e:
        logger.error(f"Error granting role: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏: {e}")


@router.message(Command("revoke"), HasRole(Role.ADMIN))
async def revoke_role_command(message: Message, command: CommandObject, db=None, redis=None):
    """–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∑—ã–≤–∞ —Ä–æ–ª–µ–π"""
    if not db:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    if not command.args:
        await message.answer(
            "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "–ü—Ä–∏–º–µ—Ä: /revoke staff 123456789 –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        )
        return
    
    args_parts = command.args.strip().split()
    if len(args_parts) < 1:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã")
        return
    
    role = args_parts[0]
    target_id = args_parts[1] if len(args_parts) > 1 else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ä–æ–ª–∏
    if not Role.is_valid_role(role):
        await message.answer(
            f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å: {role}\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: {', '.join(Role.get_all_roles())}"
        )
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not target_id:
        if message.reply_to_message and message.reply_to_message.from_user:
            target_id = str(message.reply_to_message.from_user.id)
        else:
            await message.answer(
                "‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                "–ü—Ä–∏–º–µ—Ä: /revoke staff 123456789"
            )
            return
    
    try:
        target_user_id = int(target_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        target_user = await db.users.get_user_record(user_id=target_user_id)
        if not target_user:
            await message.answer(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è —Ä–æ–ª—å
        if not await db.users.user_has_role(user_id=target_user_id, role=role):
            await message.answer(f"‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id} –Ω–µ—Ç —Ä–æ–ª–∏ '{role}'")
            return
        
        # –ó–∞–ø—Ä–µ—â–∞–µ–º –æ—Ç–∑—ã–≤–∞—Ç—å —Ä–æ–ª—å admin —É —Å–∞–º–æ–≥–æ —Å–µ–±—è
        if role == Role.ADMIN.value and target_user_id == message.from_user.id:
            await message.answer("‚ùå –ù–µ–ª—å–∑—è –æ—Ç–æ–∑–≤–∞—Ç—å —Ä–æ–ª—å admin —É —Å–∞–º–æ–≥–æ —Å–µ–±—è")
            return
        
        # –û—Ç–∑—ã–≤–∞–µ–º —Ä–æ–ª—å
        await db.users.remove_user_role(
            user_id=target_user_id, 
            role=role, 
            revoked_by=message.from_user.id
        )
        
        # –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫—ç—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if redis:
            await redis.delete(f"rbac:{target_user_id}")
        
        await message.answer(
            f"‚úÖ –†–æ–ª—å '{role}' —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–∑–≤–∞–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id}"
        )
        
        logger.info(
            f"Role revoked: {role} from user {target_user_id} by admin {message.from_user.id}"
        )
        
    except ValueError:
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except Exception as e:
        logger.error(f"Error revoking role: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∑—ã–≤–µ —Ä–æ–ª–∏: {e}")


@router.message(Command("system_stats"))
async def system_stats_command(message: Message, db=None):
    """–°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""
    if not db:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    try:
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        await message.answer(
            "üìä <b>–°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
            "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...\n\n"
            "–ë—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å:\n"
            "‚Ä¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            "‚Ä¢ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–æ–ª—è–º\n"
            "‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–µ—Ä–∏–æ–¥\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤\n"
            "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫"
        )
    except Exception as e:
        logger.error(f"Error getting system stats: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


@router.message(Command("cache_clear"))
async def cache_clear_command(message: Message, redis=None):
    """–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞"""
    if not redis:
        await message.answer("‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return
    
    try:
        # –û—á–∏—â–∞–µ–º –∫—ç—à —Ä–æ–ª–µ–π
        keys = await redis.keys("rbac:*")
        if keys:
            await redis.delete(*keys)
            await message.answer(f"‚úÖ –û—á–∏—â–µ–Ω–æ {len(keys)} –∑–∞–ø–∏—Å–µ–π –∫—ç—à–∞ —Ä–æ–ª–µ–π")
        else:
            await message.answer("‚ÑπÔ∏è –ö—ç—à —Ä–æ–ª–µ–π —É–∂–µ –ø—É—Å—Ç")
        
        logger.info(f"Cache cleared by admin {message.from_user.id}")
        
    except Exception as e:
        logger.error(f"Error clearing cache: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞: {e}")


@router.message()
async def admin_unknown_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥"""
    await message.answer(
        "‚ùì <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</b>\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
        "‚Ä¢ /admin_panel - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
        "‚Ä¢ /grant <role> [user_id] - –í—ã–¥–∞—Ç—å —Ä–æ–ª—å\n"
        "‚Ä¢ /revoke <role> [user_id] - –û—Ç–æ–∑–≤–∞—Ç—å —Ä–æ–ª—å\n"
        "‚Ä¢ /system_stats - –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
        "‚Ä¢ /cache_clear - –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à\n\n"
        "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin_panel"
    )