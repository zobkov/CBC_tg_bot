"""
–ü—É–±–ª–∏—á–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
"""
import logging
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from app.bot.filters.rbac import IsNotBanned

logger = logging.getLogger(__name__)

router = Router(name="public")

# –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# router.message.filter(IsNotBanned())
# router.callback_query.filter(IsNotBanned())


# –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ /start –∏ /menu - —Ç–µ–ø–µ—Ä—å –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –¥–∏–∞–ª–æ–≥–∞–º–∏


@router.message(Command("help"))
async def help_command(message: Message, roles: set[str] = None):
    """–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ä–æ–ª—è–º"""
    roles = roles or set()
    
    base_help = (
        "üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É –ö–ë–ö</b>\n\n"
        "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /start, /menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "‚Ä¢ /whoami - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å\n\n"
    )
    
    if "admin" in roles:
        admin_help = (
            "üîß <b>–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n"
            "‚Ä¢ /grant <role> - –í—ã–¥–∞—Ç—å —Ä–æ–ª—å (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)\n"
            "‚Ä¢ /revoke <role> - –û—Ç–æ–∑–≤–∞—Ç—å —Ä–æ–ª—å\n"
            "‚Ä¢ /grant <role> <user_id> - –í—ã–¥–∞—Ç—å —Ä–æ–ª—å –ø–æ ID\n"
            "‚Ä¢ /revoke <role> <user_id> - –û—Ç–æ–∑–≤–∞—Ç—å —Ä–æ–ª—å –ø–æ ID\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: admin, staff, volunteer, guest, banned\n\n"
        )
        await message.answer(base_help + admin_help)
    elif "staff" in roles:
        staff_help = (
            "üëî <b>–§—É–Ω–∫—Ü–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:</b>\n"
            "‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –∑–∞—è–≤–∫–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
            "‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
            "‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        )
        await message.answer(base_help + staff_help)
    elif "volunteer" in roles:
        volunteer_help = (
            "ü§ù <b>–§—É–Ω–∫—Ü–∏–∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞:</b>\n"
            "‚Ä¢ –ü–æ–º–æ—â—å –Ω–æ–≤—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º\n"
            "‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n"
            "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        )
        await message.answer(base_help + volunteer_help)
    else:
        guest_help = (
            "üéØ <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞:</b>\n"
            "‚Ä¢ –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –ö–ë–ö\n"
            "‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /start\n\n"
        )
        await message.answer(base_help + guest_help)


@router.message(Command("whoami"))
async def whoami_command(message: Message, current_user=None, roles: set[str] = None):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –µ–≥–æ —Ä–æ–ª—è—Ö"""
    roles = roles or set()
    user_id = message.from_user.id
    username = message.from_user.username or "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    roles_list = ", ".join(sorted(roles)) if roles else "–Ω–µ—Ç —Ä–æ–ª–µ–π"
    
    info_text = (
        f"üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</b>\n\n"
        f"üÜî ID: <code>{user_id}</code>\n"
        f"üë§ Username: @{username}\n"
        f"üè∑ –†–æ–ª–∏: {roles_list}\n"
    )
    
    if current_user:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ created —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ datetime –æ–±—ä–µ–∫—Ç–æ–º
        if hasattr(current_user.created, 'strftime'):
            created_str = current_user.created.strftime('%d.%m.%Y %H:%M')
        else:
            created_str = str(current_user.created)
            
        info_text += (
            f"üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {created_str}\n"
            f"üåê –Ø–∑—ã–∫: {current_user.language}\n"
            f"üìä –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏: {current_user.submission_status}\n"
        )
    
    await message.answer(info_text)


# Debug handler –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã
@router.message()
async def debug_all_messages(message: Message):
    """Debug: –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥—Ä—É–≥–∏–º–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏, –æ—Ç–≤–µ—á–∞–µ–º
    if message.text and message.text.startswith('/'):
        await message.answer(f"‚ùì –ö–æ–º–∞–Ω–¥–∞ '{message.text}' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.")